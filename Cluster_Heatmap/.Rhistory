install.packages("revtools")
knitr::opts_chunk$set(echo = TRUE)
hist(Counts[[1]])
Counts
library(DESeq2)
library(DESeq2)
library(ggplot2)
Counts <- read.csv("C:/Users/lgautam/Desktop/count_table_for_deseq_example.csv", header = TRUE, sep = ",")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
```{r cars, echo=TRUE}
summary(cars)
# Load libraries
library(DESeq2)
library(reshape)
library(ggplot2)
library(ggrepel)
library(DEGreport)
knitr::opts_chunk$set(fig.width = 10, fig.height = 100)
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('all_in_one_file.csv')
dim(data)
head(data)
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1)
knitr::opts_chunk$set(fig.width = 10, fig.height = 100)
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('all_in_one_file.csv')
dim(data)
head(data)
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1)
get_plot_dims <- function(heat_map)
{
plot_height <- sum(sapply(heat_map$gtable$heights, grid::convertHeight, "in"))
plot_width  <- sum(sapply(heat_map$gtable$widths, grid::convertWidth, "in"))
return(list(height = plot_height, width = plot_width))
}
my_plot <- pheatmap(data1,scale="row", cellheight = 10)
View(Counts)
View(Counts)
restart
q
quit
knitr::opts_chunk$set(fig.width = 12, fig.height = 240)
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('Data_sig_only.csv')
dim(data)
head(data)
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1)
pheatmap(log2(data1 +1), scale = 'row')
pheatmap(log2(data1 +1), scale = 'row', row.names = TRUE)
pheatmap(log2(data1 +1), scale = 'row', row.names = TRUE, treeheight_row = 20)
get_plot_dims <- function(heat_map)
{
plot_height <- sum(sapply(heat_map$gtable$heights, grid::convertHeight, "in"))
plot_width  <- sum(sapply(heat_map$gtable$widths, grid::convertWidth, "in"))
return(list(height = plot_height, width = plot_width))
}
my_plot <- pheatmap(data1,scale="row", cellheight = 8)
plot_dims <- get_plot_dims(my_plot)
png("plot.png", height = plot_dims$height, width = plot_dims$width, units = "in", res = 72)
my_plot
dev.off()
knitr::opts_chunk$set(fig.width = 10, fig.height = 240)
knitr::opts_chunk$set(fig.width = 10, fig.height = 240)
install.packages("mixOmics")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mixOmics")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
# url prefix to download files
# url_prefix <- "https://drive.google.com/uc?export=download&id="
# url IDs are extracted from Google Drive
# spatial_folder_id <- "13B6ulZwz9XmWBD1RsnTHTMn3ySgIpFCY"
# h5_mat_id <- "1nnch2ctksJ4rXYG5FzlPh3bIgnylTicV"
# file names
# spatial_folder_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_spatial.tar.gz"
# h5_mat_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_filtered_feature_bc_matrix.h5"
# download files from the resource URL to a destination path where the file is saved
#download.file(url = paste0(url_prefix, spatial_folder_id),
#              destfile = file.path(spatial_folder_name))
#download.file(url = paste0(url_prefix, h5_mat_id),
#              destfile = file.path(h5_mat_name))
# extract (or list) contents from the tar archives
untar("LAMDATA")
untar("LAMDATA", list = TRUE)  # list contents
# Load a 10x Genomics Visium Spatial Experiment into a Seurat object
LAM_data <- Seurat::Load10X_Spatial(
# The directory contains the read count matrix H5 file and the image data in a subdirectory called `spatial`.
data.dir = root_dir,
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
install.packages("hdf5r")
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
# url prefix to download files
# url_prefix <- "https://drive.google.com/uc?export=download&id="
# url IDs are extracted from Google Drive
# spatial_folder_id <- "13B6ulZwz9XmWBD1RsnTHTMn3ySgIpFCY"
# h5_mat_id <- "1nnch2ctksJ4rXYG5FzlPh3bIgnylTicV"
# file names
# spatial_folder_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_spatial.tar.gz"
# h5_mat_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_filtered_feature_bc_matrix.h5"
# download files from the resource URL to a destination path where the file is saved
#download.file(url = paste0(url_prefix, spatial_folder_id),
#              destfile = file.path(spatial_folder_name))
#download.file(url = paste0(url_prefix, h5_mat_id),
#              destfile = file.path(h5_mat_name))
# extract (or list) contents from the tar archives
untar("LAMDATA")
untar("LAMDATA", list = TRUE)  # list contents
# Load a 10x Genomics Visium Spatial Experiment into a Seurat object
LAM_data <- Seurat::Load10X_Spatial(
# The directory contains the read count matrix H5 file and the image data in a subdirectory called `spatial`.
data.dir = root_dir,
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
# url prefix to download files
# url_prefix <- "https://drive.google.com/uc?export=download&id="
# url IDs are extracted from Google Drive
# spatial_folder_id <- "13B6ulZwz9XmWBD1RsnTHTMn3ySgIpFCY"
# h5_mat_id <- "1nnch2ctksJ4rXYG5FzlPh3bIgnylTicV"
# file names
# spatial_folder_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_spatial.tar.gz"
# h5_mat_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_filtered_feature_bc_matrix.h5"
# download files from the resource URL to a destination path where the file is saved
destfile = file.path(LAMDATA)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
# url prefix to download files
# url_prefix <- "https://drive.google.com/uc?export=download&id="
# url IDs are extracted from Google Drive
# spatial_folder_id <- "13B6ulZwz9XmWBD1RsnTHTMn3ySgIpFCY"
# h5_mat_id <- "1nnch2ctksJ4rXYG5FzlPh3bIgnylTicV"
# file names
# spatial_folder_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_spatial.tar.gz"
# h5_mat_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_filtered_feature_bc_matrix.h5"
# download files from the resource URL to a destination path where the file is saved
destfile = file.path(LAM1_filt_feat_bc_matrix.h5)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
# url prefix to download files
# url_prefix <- "https://drive.google.com/uc?export=download&id="
# url IDs are extracted from Google Drive
# spatial_folder_id <- "13B6ulZwz9XmWBD1RsnTHTMn3ySgIpFCY"
# h5_mat_id <- "1nnch2ctksJ4rXYG5FzlPh3bIgnylTicV"
# file names
# spatial_folder_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_spatial.tar.gz"
# h5_mat_name <- "./V1_Mouse_Brain_Sagittal_Posterior_Section_2_filtered_feature_bc_matrix.h5"
# download files from the resource URL to a destination path where the file is saved
destfile = file.path(LAM1_filt_feat_bc_matrix.h5)
getwd()
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(
# The directory contains the read count matrix H5 file and the image data in a subdirectory called `spatial`.
data.dir = root_dir,
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(
# The directory contains the read count matrix H5 file and the image data in a subdirectory called `spatial`.
data.dir = "C:/Users/lgautam/Documents/LAMDATA",
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(
data.dir = "C:/Users/lgautam/Documents/LAMDATA",
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(
data.dir = "C:/Users/lgautam/Documents/LAMDATA",
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(
data.dir = root_dir,
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(data.dir = root_dir,
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(
data.dir = "C:/Users/lgautam/Documents/LAMDATA",
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
getwd()
LAM_data <- Seurat::Load10X_Spatial(
?data.dir = root_dir,
filename = LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
list.files()
# specify your working directory
root_dir <- "C:/Users/lgautam/Documents/LAMDATA"
setwd(root_dir)
list.files()
getwd()
LAM_data <- Seurat::Load10X_Spatial(LAM1_filt_feat_bc_matrix.h5,
assay = "Spatial", # specify name of the initial assay
slice = "slice1", # specify name of the stored image
filter.matrix = TRUE,
to.upper = FALSE
)
# The mtcars dataset:
library(ggplot2)
data <- read.csv('Averaged_Kinase_Vs_SEQ.csv')
setwd("~/LAMDATA/Heatmap")
# The mtcars dataset:
library(ggplot2)
data <- read.csv('Averaged_Kinase_Vs_SEQ.csv')
# Default Heatmap
heatmap(data)
# Default Heatmap
heatmap(data)
m <- as.matrix(data[, -1])
rownames(m) <- data$Name
# Default Heatmap
heatmap(data)
heatmap(as.matrix(data[, -1]))
m <- as.matrix(data[, -1])
rownames(m) <- data$Name
heatmap(m)
knitr::opts_chunk$set(echo = TRUE)
library(Seurat)
library(SeuratObject)
setwd("C:\/sers/lgautam/Documents/LAMDATA")
setwd("C:/sers/lgautam/Documents/LAMDATA")
setwd("C:/users/lgautam/Documents/LAMDATA")
setwd("C:/users/lgautam/Documents/LAMDATA")
library(Seurat)
library(SeuratObject)
Read10X_h5("LAM1_filt_feat_bc_matrix.h5", ensg.names = FALSE)
Read10X_h5("LAM1_filt_feat_bc_matrix.h5", use.names = TRUE, unique.features = TRUE)
Load10X_Spatial("LAM1_filt_feat_bc_matrix.h5", use.names = TRUE, unique.features = TRUE)
Load10X_Spatial(
data.dir,
filename = "LAM1_filt_feat_bc_matrix.h5",
assay = "Spatial",
slice = "slice1",
filter.matrix = TRUE,
to.upper = FALSE,
image = NULL,
...
)
Load10X_Spatial(
data.dir,
filename = "LAM1_filt_feat_bc_matrix.h5",
assay = "Spatial",
slice = "slice1",
filter.matrix = TRUE,
to.upper = FALSE,
image = NULL,
...
) {
Load10X_Spatial(
data.dir,
filename = "LAM1_filt_feat_bc_matrix.h5",
assay = "Spatial",
slice = "slice1",
filter.matrix = TRUE,
to.upper = FALSE,
image = NULL,
...
)
TestData = Load10X_Spatial(data.dir = ""C:/users/lgautam/Documents/LAMDATA"", filename =
TestData = Load10X_Spatial(data.dir = "C:/users/lgautam/Documents/LAMDATA", filename =
"LAM1_filt_feat_bc_matrix.h5", assay = "Spatial", slice = "slice2", filter.matrix = TRUE)
Load10X_Spatial(
data.dir,
filename = "LAM1_filt_feat_bc_matrix.h5",
assay = "Spatial",
slice = "slice1",
filter.matrix = TRUE,
to.upper = FALSE,
image = NULL,
...
) {
TestData = Load10X_Spatial(data.dir = "C:/users/lgautam/Documents/LAMDATA", filename =
"LAM1_filt_feat_bc_matrix.h5", assay = "Spatial", slice = "slice2", filter.matrix = TRUE, image = NULL)
getwd()
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('Averaged_Kinase_Vs_SEQ_2.csv')
setwd("~/LAMDATA/Heatmap")
setwd("~/LAMDATA/Heatmap")
getwd()
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('Averaged_Kinase_Vs_SEQ_2.csv')
dim(data)
head(data, scale = 'row')
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1, cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(log2(data1 +1), scale = 'row',row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
pheatmap(log2(data1 +1), scale = 'row', row.names = TRUE)
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = F, treeheight_row = 50)
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
out <- pheatmap(data1,
show_rownames=F, cluster_cols=T, cluster_rows=T, scale="row",
cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata,
annotation_row=metadata_gene)
setwd("C:/Users/lgautam/OneDrive - University of Iowa/LAM/Forheatmap")
getwd()
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
getwd()
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('AverageofLFC100.csv')
dim(data)
head(data, scale = 'row')
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1, cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(log2(data1 +1), scale = 'row',row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
pheatmap(log2(data1 +1), scale = 'row', row.names = TRUE)
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = F, treeheight_row = 50)
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
out <- pheatmap(data1,
show_rownames=F, cluster_cols=T, cluster_rows=T, scale="row",
cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata,
annotation_row=metadata_gene)
out <- pheatmap(log2(data1 +1),
show_rownames=F, cluster_cols=T, cluster_rows=T, scale="row",
cex=1, clustering_distance_rows="euclidean", cex=1,
clustering_distance_cols="euclidean", clustering_method="complete", border_color=FALSE,
annotation_col=metadata,
annotation_row=metadata_gene)
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = )
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = , cluster_rows = F, cluster_cols = F )
data <-read.csv('Log2FC_all_signi.csv')
dim(data)
head(data, scale = 'row')
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1, cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(log2(data1 +1), scale = 'row',row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
pheatmap(log2(data1 +1), scale = 'row', row.names = TRUE)
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = , cluster_rows = F, cluster_cols = F )
data <-read.csv('Log2FC_all_signi.csv')
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = , cluster_rows = F, cluster_cols = F )
data <-read.csv('Log2FC_all_signi.csv')
dim(data)
head(data, scale = 'row')
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1, cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(log2(data1 +1), scale = 'row',row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
pheatmap(log2(data1 +1), scale = 'row', row.names = TRUE)
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = F, treeheight_row = 50)
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = , cluster_rows = F, cluster_cols = F )
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = , cluster_rows = F, cluster_cols = F )
pheatmap(data1, cluster_rows=FALSE, cluster_cols=FALSE)
#Cut the heatmap to pieces
my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = , cluster_rows = F, cluster_cols = F )
pheatmap(log2(data1 +1), scale = 'row',row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
pheatmap(data1, cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(data1, cluster_rows=TRUE, cluster_cols=FALSE)
pheatmap(data1, cluster_rows=TRUE, cluster_cols=FALSE, cutree_rows = 3)
getwd()
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('Log2FC_all_signi.csv')
dim(data)
head(data, scale = 'row')
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1, cluster_rows=TRUE, cluster_cols=FALSE, cutree_rows = 3)
#pheatmap(log2(data1 +1), scale = 'row',row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 3, cutree_cols = )
#pheatmap(log2(data1 +1), scale = 'row', row.names = TRUE)
#my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = F, treeheight_row = 50)
#Cut the heatmap to pieces
#my_plot <- pheatmap(log2(data1 +1), scale = 'row', row.names = F, show_rownames = T, treeheight_row = 100, cutree_rows = 1, cutree_cols = , cluster_rows = F, cluster_cols = F )
data <-read.csv('Log2FC_all_signi.csv')
pheatmap(data1, cluster_rows=TRUE, cluster_cols=FALSE, cutree_rows = 3)
getwd()
library(pheatmap)
library(grid)
library(ggplot2)
library(matrixStats)
library(tidyverse)
data <-read.csv('Log2FC_all_signi.csv')
dim(data)
head(data, scale = 'row')
data1 <- as.matrix(data[,-1])
rownames(data1) <- data[,1]
pheatmap(data1, cluster_rows=TRUE, cluster_cols=FALSE, cutree_rows = 3)
